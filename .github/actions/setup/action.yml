name: 'Setup Node.js and pnpm'
description: 'Setup Node.js, pnpm, and install dependencies with optimized caching'

inputs:
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '22'
  pnpm-version:
    description: 'pnpm version to use'
    required: false
    default: '10'
  install-deps:
    description: 'Whether to install dependencies'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ inputs.pnpm-version }}

    - name: Setup Node.js with cache
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'

    - name: Get pnpm store directory
      if: inputs.install-deps == 'true'
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Cache pnpm store
      if: inputs.install-deps == 'true'
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Cache node_modules
      if: inputs.install-deps == 'true'
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Install dependencies
      if: inputs.install-deps == 'true'
      shell: bash
      run: |
        if [ ! -d "node_modules" ] || [ ! -f "node_modules/.pnpm/lock.yaml" ]; then
          echo "Installing dependencies..."
          pnpm install --frozen-lockfile
        else
          echo "Dependencies already installed, skipping..."
        fi
